import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { map, Observable } from 'rxjs';
import { environment } from '../../../../../environments/environment.development';
import { AuthService } from '../../../../core/services/auth/auth.service';
import { IOffer } from '../../interfaces/ioffer';
import {
  ArrayApiResponse,
  ObjectApiResponse,
} from '../../../../core/interfaces/ApiResponse';
import { IOfferProfile } from '../../interfaces/IOfferProfile';

@Injectable({
  providedIn: 'root',
})
export class OfferService {
  private createOfferUrl: string = `${environment.baseApi}${environment.offer.create}`;
  private getOffersUrl: string = `${environment.baseApi}${environment.offer.getAllForCurrentUser}`;
  private getOffersByProjectId: string = `${environment.baseApi}${environment.offer.getOfferByProjectId}`;

  constructor(private http: HttpClient, private auth: AuthService) {}

  /**
   * Create a new offer for a project
   * @param offer an IOffer object (id can be omitted or generated by the server)
   */
  createOffer(offer: IOffer): Observable<IOffer> {
    return this.http
      .post<ObjectApiResponse<IOffer>>(this.createOfferUrl, offer)
      .pipe(
        map((resp) => {
          if (!resp.isValid) {
            throw new Error(resp.errorMessage || 'Failed to create offer');
          }
          return resp.data;
        })
      );
  }

  /** fetch all offers made by the logged-in user */
  getCurrentUserOffers(): Observable<IOffer[]> {
    return this.http.get<ArrayApiResponse<IOffer>>(this.getOffersUrl).pipe(
      map((resp) => {
        if (!resp.isValid) {
          throw new Error(resp.errorMessage || 'Failed to load offers');
        }
        return resp.data;
      })
    );
  }

  getOfferByProjectId(id: number): Observable<IOfferProfile[]> {
    return this.http.get<IOfferProfile[]>(`${this.getOffersByProjectId}/${id}`);
  }

  changeOfferStatus(offerId: number, status: string): Observable<any> {
    return this.http.post(
      `${environment.baseApi}${environment.offer.BusinessOwnerAnswer(offerId)}`,
      { status }
    );
  }
}
